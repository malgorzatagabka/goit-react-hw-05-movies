{"version":3,"file":"static/js/139.508dab03.chunk.js","mappings":"8SAEAA,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAEVC,EAAW,mCAAG,oGACAF,EAAAA,GAAAA,IAAA,qCAAwCC,IADxC,cACjBE,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,qDAMXC,EAAQ,mCAAG,WAAMC,GAAN,uFACGN,EAAAA,GAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEK,EAAlE,gCADH,cACdH,EADc,yBAEbA,EAASC,MAFI,2CAAH,sDAMRG,EAAU,mCAAG,WAAMC,GAAN,uFACCR,EAAAA,GAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCP,EAAtC,oBADD,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAOVK,EAAO,mCAAG,WAAMD,GAAN,uFACIR,EAAAA,GAAAA,IAAA,gBAAmBQ,EAAnB,qEADJ,cACbL,EADa,yBAEZA,EAASC,KAAKM,MAFF,2CAAH,sDAKPC,EAAU,mCAAG,WAAMH,GAAN,uFACCR,EAAAA,GAAAA,IAAA,gBAAmBQ,EAAnB,4EADD,cAChBL,EADgB,yBAEfA,EAASC,MAFM,2CAAH,qD,sICDvB,EAxBgB,WACd,IACA,ECJwB,SAAAI,GACxB,OAA8BI,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACJP,IACFG,EAAAA,EAAAA,IAAWH,GAASQ,MAAK,SAAAb,GACvBW,GAAW,OAAIX,EAASc,SACzB,GACJ,GAAE,CAACT,IACG,CAAEK,QAAAA,EACV,CDNqBK,EADAC,EAAAA,EAAAA,MAAZX,SACAK,EAAR,EAAQA,QAER,OAAKA,EAEkB,IAAnBA,EAAQO,QACH,qEAIP,wBACGP,EAAQQ,KAAI,SAAAC,GACX,OACE,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOC,OAKnB,OAfgB,SAACE,EAAA,EAAD,GAkBtB,C","sources":["Api/Api.jsx","components/Reviews/Reviews.jsx","utils/hooks/useReviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API_KEY = '3a7b9fae23d21ee4f1e0a0e3e74eac23'\n\nexport const getTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`)\n    return response.data;\n};\n\n    \nexport const getQuery = async query => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false&page=1`)\n    return response.data;\n}\n\n\nexport const getMovieId = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\n\n\nexport const getCast = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=3a7b9fae23d21ee4f1e0a0e3e74eac23&language=en-US`)\n    return response.data.cast;\n}\n\nexport const getReviews = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=3a7b9fae23d21ee4f1e0a0e3e74eac23&language=en-US&page=1`)\n    return response.data;\n}\n\n","import { useParams } from 'react-router-dom';\nimport { useReviews } from 'utils/hooks/useReviews';\nimport Loader from 'components/Loader/Loader';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { reviews } = useReviews(movieId);\n\n  if (!reviews) return <Loader />;\n\n  if (reviews.length === 0) {\n    return <p>We don't have any reviews for this movie</p>;\n  }\n\n  return (\n    <ul>\n      {reviews.map(review => {\n        return (\n          <li key={review.author}>\n            <p>{review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\nmovieId: PropTypes.string.isRequired,\n};","import { getReviews } from 'Api/Api';\nimport { useEffect, useState } from 'react';\n\nexport const useReviews = movieId => {\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    if (movieId)\n      getReviews(movieId).then(response => {\n        setReviews([...response.results]);\n      });\n  }, [movieId]);\n  return { reviews };\n};\n"],"names":["axios","API_KEY","getTrending","response","data","getQuery","query","getMovieId","movieId","getCast","cast","getReviews","useState","reviews","setReviews","useEffect","then","results","useReviews","useParams","length","map","review","author","content","Loader"],"sourceRoot":""}